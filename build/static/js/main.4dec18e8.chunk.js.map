{"version":3,"sources":["config.js","components/Home.jsx","components/MyAppBar.jsx","components/LottieControl.jsx","components/NotFound.jsx","components/auth/FacebookButton.jsx","components/auth/GoogleButton.jsx","DefaultTheme.jsx","components/auth/AuthStateZero.jsx","components/auth/PasswordInputSignIn.jsx","components/auth/EmailInput.jsx","components/auth/NameInput.jsx","components/auth/PasswordInputSignUp.jsx","components/auth/Auth.jsx","components/events/Filter.jsx","components/events/EventsList.jsx","components/events/CheckoutForm.jsx","components/events/Payment.jsx","components/events/EventDetail.jsx","components/events/create-event/TitleEvent.jsx","components/events/create-event/DateEvent.jsx","components/events/create-event/PlaceEvent.jsx","components/events/create-event/PriceEvent.jsx","components/events/create-event/DescriptionEvent.jsx","components/events/create-event/CategoriesEvent.jsx","components/events/create-event/CreateEvent.jsx","components/user/Account.jsx","components/events/EditEvent.jsx","components/user/EditAccount.jsx","components/chat/ChatPage.jsx","App.js","index.js"],"names":["API_URL","process","Home","this","props","classes","Container","maxWidth","autoPlay","loop","muted","id","src","type","style","display","alignItems","flexDirection","marginTop","flexWrap","Typography","variant","width","className","bold","color","spacing","Component","withStyles","theme","fontWeight","letterSpacing","Brand","root","fontSize","fontFamily","background","WebkitBackgroundClip","WebkitTextFillColor","MyAppBar","handleClick","event","a","setState","anchorEl","currentTarget","handleClose","state","drawerActivate","drawer","createDrawer","bind","destroyDrawer","window","innerWidth","addEventListener","AppBar","elevation","Toolbar","Grid","container","direction","justify","sideBarIcon","onClick","to","textDecoration","SwipeableDrawer","open","onClose","onOpen","tabIndex","role","onKeyDown","user","List","list","ListItem","button","divider","_id","onLogOut","flexGrow","padding","Button","Menu","keepMounted","Boolean","MenuItem","Divider","location","pathname","paddingRight","cursor","withRouter","LottieControl","height","defaultOptions","autoplay","animationData","animation","rendererSettings","preserveAspectRatio","options","NotFound","ErrorJson","onFacebookResponse","appId","fields","autoLoad","callback","render","renderProps","GoogleButton","onGoogleResponse","clientId","buttonText","onSuccess","cookiePolicy","CssTextField","minWidth","borderColor","TextField","BorderLinearProgress","colorPrimary","backgroundColor","bar","borderRadius","LinearProgress","BorderLinearProgressMid","BorderLinearProgressRock","CustomDateInput","CustomSelect","FormControl","Subtitle","CustomCheckbox","checked","Checkbox","createTheme","palette","primary","main","contrastText","secondary","paper","text","typography","overrides","MuiButton","responsiveFontSizes","AuthStateZero","onNext","size","justifyContent","makeStyles","PasswordInputSignIn","onLogin","onPreview","onChange","error","label","required","Alert","severity","EmailInput","NameInput","PasswordInputSignUp","onRegister","onCheck","FormHelperText","FormControlLabel","control","name","Auth","step","email","firstName","lastName","password","confirmPassword","age","prevStep","nextStep","console","log","handleChange","input","e","target","value","handleCheck","handleAuth","axios","post","withCredentials","data","handleLogin","myUser","response","errorMessage","onAuth","history","push","handleRegister","newUser","Filter","onSearch","defaultValue","Date","getDate","getMonth","getFullYear","startDate","onDate","InputLabelProps","shrink","InputLabel","Select","labelId","onCity","city","cities","map","option","i","ticketType","onTicketType","onClean","EventsList","events","hotzone","progress","expandedId","showFilter","filteredEvents","searchText","componentDidMount","get","forEach","elem","includes","eventsFiltered","newValue","getCategoryIcon","category","handleExpandedId","handleProgress","progressInt","Math","round","Tooltip","title","handleShowFilters","handleSearchName","searchedEvent","handleFilterGeneral","filterDate","searchedDate","filterCity","searchedCity","filterTicketType","searchedType","filter","toLowerCase","day","start","month","dateFormated","isPaid","handleClean","index","TabContext","position","TabList","Tab","a11yProps","TabPanel","flexPosition","item","xs","sm","md","lg","xl","Card","CardActionArea","CardMedia","component","alt","image","imageEvent","CardContent","wrap","gutterBottom","light","address","capacity","ticketsSold","length","categories","zoneEvent","checkIn","CardActions","disableSpacing","IconButton","Collapse","in","timeout","unmountOnExit","Avatar","imageAccount","useState","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","eventId","useEffect","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","onSubmit","base","fontSmoothing","invalid","iconColor","href","Payment","promise","loadStripe","EventDetail","eventDetail","showPayment","canBuy","fetchingUser","comment","comments","userResponse","match","params","handleShowPayment","handleClosePayment","commentCreated","myCommentPopulated","sortedComments","sort","b","date","CircularProgress","host","ticketsPrice","placeholder","multiline","rows","authorId","TitleEvent","DateEvent","PlaceEvent","countries","country","handleCountry","countryTarget","find","handleCity","PriceEvent","DescriptionEvent","onAddImage","accept","hidden","CategoriesEvent","onCreate","CreateEvent","end","description","handleImage","files","handleCategories","indexOf","splice","newCategories","concat","handleCreate","formData","FormData","append","imgResponse","newEvent","Account","ticketsBought","eventsCreated","userId","handleCheckIn","canCheckIn","EditEvent","imageFile","countriesOptions","citiesOptions","handleEditEvent","editedEvent","patch","handleClickOpen","handleDeleteEvent","delete","CountrySelected","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","EditAccount","handleEditAccount","editedAccount","handleDeleteAccount","socket","ChatPage","messagesEnd","React","createRef","loading","messageList","currentMessage","conversationId","scrollToBottom","scrollIntoView","behavior","io","participants","conversation","emit","on","handleMessageInput","sendMessage","messageContent","chatId","content","sender","val","float","clear","ref","el","App","handleFacebookResponse","picture","url","facebookId","userID","catch","err","handleGoogleSuccess","profileObj","givenName","familyName","imageUrl","googleId","handleLogOut","handleUserState","ThemeProvider","exact","path","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dec18e8.chunk.js","sourcesContent":["let API_URL = process.env.REACT_APP_SERVER_URL\n\n//named export \nexport { API_URL}","import React, { Component } from 'react'\nimport { Typography, Paper, Container, ThemeProvider } from '@material-ui/core';\nimport {createTheme, withStyles} from '@material-ui/core/styles'\n\n\n\nconst styles = theme => ({\n    bold: {\n        fontWeight: 700,\n    },\n    spacing: {\n        letterSpacing: 3,\n    },\n\n  });\n\n\nclass Home extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n                <Container maxWidth=\"sm\">\n                    <video  autoPlay loop muted id=\"video-container\">\n                        <source src=\"https://res.cloudinary.com/dplgnsjzm/video/upload/v1626958308/nightzone-backend/video/video_gw4ydm.mp4\" type='video/mp4' />\n                    </video>\n                \n                        <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column', marginTop: '50%', flexWrap: 'wrap'}}>\n                            <Typography variant=\"h1\" style={{width: \"max-content\"}}  className={this.props.classes.bold} color=\"secondary\">JUST ENJOY</Typography>\n                            <Typography variant=\"h4\" style={{width: \"max-content\"}} className={this.props.classes.spacing} color=\"secondary\">Life is made of moments. Memories. And parties.</Typography>\n                        </div>\n           \n              \n                </Container>\n                \n\n        )\n    }\n}\n\nexport default withStyles(styles)(Home)","import React, { Component } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport PropTypes from 'prop-types';\nimport {AppBar, Button, Toolbar, Typography, List, ListItem, withStyles, Grid, SwipeableDrawer, Menu, MenuItem, Divider} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst styleSheet = {\n  list : {\n    width : 200,\n  },\n  padding : {\n    paddingRight : 30,\n    cursor : \"pointer\",\n  },\n\n  sideBarIcon : {\n    padding : 0,\n    color : \"white\",\n    cursor : \"pointer\",\n  }\n}\n\nconst Brand = withStyles({\n  root: {\n    fontSize: '1.5rem',\n    fontFamily:'Monoton',\n    background: \"-webkit-linear-gradient(45deg, #39A6A3 30%, #BF1363 90%)\",\n    WebkitBackgroundClip: \"text\",\n    WebkitTextFillColor: \"transparent\",\n  }\n})(Typography);\n\nclass MyAppBar extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n        drawerActivate:false, \n        drawer:false, \n        anchorEl: null\n    };\n    this.createDrawer = this.createDrawer.bind(this);\n    this.destroyDrawer = this.destroyDrawer.bind(this);\n  }\n\n    handleClick = async (event) => {\n        await this.setState({\n            anchorEl: event.currentTarget\n        });\n    };\n\n    handleClose = async () => {\n        await this.setState({\n            anchorEl: null\n        });\n    };\n    \n  componentWillMount(){\n    if(window.innerWidth <= 600){\n      this.setState({drawerActivate:true});\n    }\n\n    window.addEventListener('resize',()=>{\n      if(window.innerWidth <= 600){\n        this.setState({drawerActivate:true});\n      }\n      else{\n        this.setState({drawerActivate:false})\n      }\n    });\n  }\n\n  //Small Screens\n  createDrawer(){\n    return (\n      <div>\n        <AppBar color=\"transparent\" elevation=\"0\">\n          <Toolbar>\n            <Grid container direction = \"row\" justify = \"space-between\" alignItems=\"center\">\n              <MenuIcon\n                className = {this.props.classes.sideBarIcon}\n                onClick={()=>{this.setState({drawer:true})}} />\n              <Brand variant=\"h1\" > <Link to=\"/\" style={{ textDecoration: 'inherit'}}>NIGHTZONE</Link></Brand>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n\n        <SwipeableDrawer\n         open={this.state.drawer}\n         onClose={()=>{this.setState({drawer:false})}}\n         onOpen={()=>{this.setState({drawer:true})}}>\n\n           <div\n             tabIndex={0}\n             role=\"button\"\n             onClick={()=>{this.setState({drawer:false})}}\n             onKeyDown={()=>{this.setState({drawer:false})}}>\n\n            { \n                this.props.user ? (\n            <>\n            <List className = {this.props.classes.list}>\n               <Link to=\"/events\" style={{ textDecoration: 'none' }}><ListItem key = {1} button divider> Events </ListItem></Link>\n               <Link to=\"/auth\" style={{ textDecoration: 'none' }}><ListItem key = {2} button divider> Create an event </ListItem></Link>\n               <Link to={`/account/${this.props.user._id}`} style={{ textDecoration: 'none' }}><ListItem key = {3} button divider> My events </ListItem></Link>\n               <Link to={`/account/${this.props.user._id}/edit`} style={{ textDecoration: 'none' }}><ListItem key = {4} button divider> Edit account </ListItem></Link>\n               <ListItem key = {5} button divider onClick={this.props.onLogOut}> <ExitToAppIcon/>  Logout </ListItem>\n            </List>\n            </>) : (\n                <List className = {this.props.classes.list}>\n                <Link to=\"/auth\" style={{ textDecoration: 'none' }}><ListItem key = {1} button divider> Get started </ListItem> </Link>\n            </List>\n            )\n            } \n         </div>\n       </SwipeableDrawer>\n\n      </div>\n    );\n  }\n\n  //Larger Screens\n  destroyDrawer(){\n    const {classes} = this.props\n    const {anchorEl} = this.state\n    return (\n      <AppBar color=\"transparent\" elevation=\"0\">\n        <Toolbar>\n            <Brand variant=\"h1\" style={{flexGrow:1, color: \"-webkit-linear-gradient(45deg, #39A6A3 30%, #BF1363 90%)\"}} ><Link to=\"/\"style={{ textDecoration: 'inherit' }}>NIGHTZONE</Link></Brand>\n           {\n                this.props.user ? (\n            <>\n                <Link to=\"/events\" style={{ textDecoration: 'none' }}><Typography variant = \"subheading\" className = {classes.padding} color=\"inherit\" >EVENTS</Typography></Link>\n                <Link to=\"/create\" style={{ textDecoration: 'none' }}><Typography variant = \"subheading\" className = {classes.padding} color=\"inherit\" >CREATE AN EVENT</Typography></Link>\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleClick}><Typography variant = \"subheading\" className = {classes.padding} color=\"inherit\" >PROFILE</Typography></Button>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleClose}\n                    >\n                    <Link to={`/account/${this.props.user._id}`} style={{ textDecoration: 'none' }}><MenuItem>My events</MenuItem></Link>\n                    <Link to={`/account/${this.props.user._id}/edit`}><MenuItem>Edit account</MenuItem></Link>\n                    <Divider/>\n                   <MenuItem onClick={this.props.onLogOut}><ExitToAppIcon/> Logout</MenuItem>\n                </Menu>\n          </>    \n                ) : (\n                  <Link to=\"/auth\" style={{ textDecoration: 'none' }}> <Typography variant = \"subheading\" className = {classes.padding} color=\"inherit\" >GET STARTED</Typography> </Link>\n                )\n            }\n            </Toolbar>\n      </AppBar>\n    )\n  }\n\n  render(){\n    //don't show the navbar in the signin/signup form\n    if (this.props.location.pathname == '/auth') {\n        return null\n    }\n    return(\n      <div>\n        {this.state.drawerActivate ? this.createDrawer() : this.destroyDrawer()}\n      </div>\n    );\n  }\n}\n\nMyAppBar.propTypes = {\n  classes : PropTypes.object.isRequired\n};\n \n\nexport default withStyles(styleSheet)(withRouter(MyAppBar));","import React from  'react'\nimport Lottie from  'react-lottie';\n\nfunction LottieControl(props) {\n\n\tconst { height, width, animation } = props\n\t\n\tconst defaultOptions = {\n\t\tloop: true,\n\t\tautoplay: true,\n\t\tanimationData: animation,\n\t\trendererSettings: {\n\t\t\tpreserveAspectRatio: 'xMidYMid slice'\n\t\t}\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<Lottie  \n\t\t\t\toptions={defaultOptions}  \n\t\t\t\theight={height}  \n\t\t\t\twidth={width }\n\t\t\t/>\n\t\t</div>\n\t)\n}\nexport default LottieControl\n","import React, { Component } from 'react'\nimport LottieControl from './LottieControl'\nimport ErrorJson from '../animations/404.json'\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <div>\n                <LottieControl\n                width=\"50%\"\n                animation={ErrorJson}/>\n                <h6 style={{color: \"#DEEEEA\", fontSize:\"20px\"}}>It seems like you loose your way to party. Maybe you only need some rest before going.</h6>\n            </div>\n        )\n    }\n}\n\nexport default NotFound;","\nimport React from 'react'\nimport { withRouter} from  'react-router-dom';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\nimport {Icon, Button} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FacebookIcon from '@material-ui/icons/Facebook';\n\n\nfunction FacebookButton(props) {\n    const {onFacebookResponse} = props\n  \n\n    return (\n        <div>\n            <FacebookLogin\n            appId={process.env.REACT_APP_FACEBOOK_ID}\n            fields=\"name,email,picture\"\n            autoLoad={false}\n            callback={onFacebookResponse}\n            render={renderProps => (\n                <Button onClick={renderProps.onClick}  className=\"CustomFab\">\n                    <FacebookIcon color=\"#DEEEEA\"/>\n                </Button>\n                )}\n            />\n        </div>\n    )\n}\n\nexport default withRouter(FacebookButton);\n\n","import React from 'react'\nimport GoogleLogin from 'react-google-login';\nimport GTranslateIcon from '@material-ui/icons/GTranslate';\nimport {Button} from '@material-ui/core';\n\nfunction GoogleButton(props) {\n    const {onGoogleResponse} = props\n   \n    return (\n        <div>\n             <GoogleLogin\n                clientId={process.env.REACT_APP_GOOGLE_ID}\n                render={renderProps => (\n                    <Button onClick={renderProps.onClick} className=\"CustomFab\" >\n                    <GTranslateIcon color=\"#DEEEEA\"/>\n                </Button>\n                )}\n                buttonText=\"Login\"\n                onSuccess={onGoogleResponse}\n                cookiePolicy={'single_host_origin'}\n  />,\n        </div>\n    )\n}\n\nexport default GoogleButton","import {createTheme, LinearProgress, withStyles, Typography, responsiveFontSizes, TextField, Checkbox, FormControl} from '@material-ui/core'\nimport PropTypes from 'prop-types';\n\n\nconst CssTextField = withStyles({\n    root: {\n        width: '40%', \n        minWidth: '400px', \n        maxWidth:'700px',\n        color: '#DEEEEA',\n        \"& .MuiOutlinedInput-input\": {\n            color: \"#DEEEEA\"\n          },\n          \"& .MuiInputLabel-root\": {\n            color: \"#DEEEEA\"\n          },\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#DEEEEA\"\n          },\n          \"&:hover .MuiOutlinedInput-input\": {\n            color: \"#BF1363\"\n          },\n          \"&:hover .MuiInputLabel-root\": {\n            color: \"#BF1363\"\n          },\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#BF1363\"\n          },\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n            color: \"#39A6A3\"\n          },\n          \"& .MuiInputLabel-root.Mui-focused\": {\n            color: \"#39A6A3\"\n          },\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#39A6A3\"\n          }\n        }\n})(TextField);\n\nconst BorderLinearProgress = withStyles({\n    root: {\n      height: 10,\n    },\n    colorPrimary: {\n      backgroundColor: '#DEEEEA'\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#39A6A3',\n    },\n  })(LinearProgress);\n\n  const BorderLinearProgressMid = withStyles({\n    root: {\n      height: 10,\n    },\n    colorPrimary: {\n      backgroundColor: '#DEEEEA'\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#894F7D',\n    },\n  })(LinearProgress);\n\n  const BorderLinearProgressRock = withStyles({\n    root: {\n      height: 10,\n    },\n    colorPrimary: {\n      backgroundColor: '#DEEEEA'\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#BF1363',\n    },\n  })(LinearProgress);\n\nconst CustomDateInput = withStyles({\n    root: {\n        width: '10%', \n        minWidth: '150px', \n        maxWidth:'250px',\n        color: '#DEEEEA',\n        \"& .MuiOutlinedInput-input\": {\n            color: \"#DEEEEA\"\n          },\n          \"& .MuiInputLabel-root\": {\n            color: \"#DEEEEA\"\n          },\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#DEEEEA\"\n          },\n          \"&:hover .MuiOutlinedInput-input\": {\n            color: \"#BF1363\"\n          },\n          \"&:hover .MuiInputLabel-root\": {\n            color: \"#BF1363\"\n          },\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#BF1363\"\n          },\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n            color: \"#39A6A3\"\n          },\n          \"& .MuiInputLabel-root.Mui-focused\": {\n            color: \"#39A6A3\"\n          },\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#39A6A3\"\n          }\n        }\n})(TextField);\n\n\n\nconst CustomSelect = withStyles({\n    root: {\n      width: 200,\n\n      \"& .MuiOutlinedInput-input\": {\n        color: \"#DEEEEA\"\n      },\n      \"& .MuiInputLabel-root\": {\n        color: \"#DEEEEA\"\n      },\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#DEEEEA\"\n      },\n      \"&:hover .MuiOutlinedInput-input\": {\n        color: \"#BF1363\"\n      },\n      \"&:hover .MuiInputLabel-root\": {\n        color: \"#BF1363\"\n      },\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#BF1363\"\n      },\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-input\": {\n        color: \"#39A6A3\"\n      },\n      \"& .MuiInputLabel-root.Mui-focused\": {\n        color: \"#39A6A3\"\n      },\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#39A6A3\"\n      }\n    }\n  })(FormControl);\n\nconst Brand = withStyles({\n    root: {\n      fontFamily:'Monoton',\n      background: \"-webkit-linear-gradient(45deg, #39A6A3 30%, #BF1363 90%)\",\n      WebkitBackgroundClip: \"text\",\n      WebkitTextFillColor: \"transparent\"\n    }\n  })(Typography);\n  \nconst Subtitle = withStyles({\n    root: {\n      fontFamily:'Montserrat',\n      background: \"#DEEEEA\",\n      WebkitBackgroundClip: \"text\",\n      WebkitTextFillColor: \"transparent\"\n    }\n  })(Typography);\n\nconst CustomCheckbox = withStyles({\n    root: {\n      color: \"#DEEEEA\",\n      '&$checked': {\n        color: \"#BF1363\",\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nlet theme = createTheme ({\n        palette: {\n                    primary: {\n                        main: '#39A6A3',\n                        contrastText: '#DEEEEA'\n                    },\n                    secondary: {\n                        main: '#DEEEEA',\n                    },\n                    background: {\n                        paper: '#231E23'\n                    },\n                    text: {\n                        primary: '#DEEEEA',\n                        secondary: '#231E23'\n                    },\n                  },\n                typography: {\n                    fontFamily: 'Montserrat'\n                },\n        overrides: {\n                    MuiButton: {\n                        root: {\n                            '&.CustomButton': {\n                                background: '#39A6A3',\n                                color: '#DEEEEA',\n                                fontWeight: 700,\n                                \"&:hover \": {\n                                    background: \"#BF1363\",\n                                    color: '#DEEEEA',\n                                },\n                            },\n                            '&.CustomStrokeButton': {\n                                borderColor:  '#DEEEEA',\n                                color: '#DEEEEA',\n                                fontWeight: 700,\n                                \"&:hover \": {\n                                    borderColor: \"#BF1363\",\n                                    color: '#BF1363',\n                                },\n                            },\n                            '&.CustomFab': {\n                                background: '#39A6A3',\n                                color: '#DEEEEA',\n                                borderRadius: '100%',\n                                padding: '20px',\n                                \"&:hover \": {\n                                    background: \"#BF1363\",\n                                    color: '#DEEEEA',\n                                },\n                            }\n                        },\n                    },\n        }\n    })\n    \n    theme = responsiveFontSizes(theme);\n\n\nexport {CssTextField, Brand, Subtitle, theme, BorderLinearProgress, BorderLinearProgressMid, BorderLinearProgressRock, CustomCheckbox, CustomDateInput, CustomSelect}\n\n","import React, { Component } from 'react'\nimport {Link} from  'react-router-dom';\nimport { Button, Typography, Grid } from '@material-ui/core';\nimport FacebookButton from './FacebookButton'\nimport GoogleButton from './GoogleButton';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/styles';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport {Subtitle, Brand} from '../../DefaultTheme'\n\n\nclass AuthStateZero extends Component {\n    \n    render() {\n        const {onFacebookResponse, onGoogleResponse, onNext, } = this.props\n        return (\n            <div className=\"both-centered\" >\n               <Brand variant=\"h1\" > <Link to=\"/\" style={{ textDecoration: 'inherit', color:'linear-gradient(90deg, #39A6A3 30%, #BF1363 90%)'}}>NIGHTZONE</Link></Brand>\n                <Subtitle variant=\"h5\">Sign in or sign up with</Subtitle>\n                <Link to=\"/auth\" style={{ textDecoration: 'none' }}><Button className=\"CustomButton\" variant=\"contained\" size=\"large\" onClick={onNext}><MailOutlineIcon/> EMAIL</Button></Link>\n                <Grid container spacing={24} direction=\"row\" justifyContent='center' alignItems=\"center\" >\n                    <FacebookButton onFacebookResponse={onFacebookResponse} />\n                    <GoogleButton onGoogleResponse={onGoogleResponse}/> \n                </Grid> \n            </div>\n        )\n    }\n}\n\nAuthStateZero.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n\nexport default withStyles(makeStyles)(AuthStateZero)","import React, { Component } from 'react'\nimport {Link, withRouter} from  'react-router-dom';\nimport { TextField, Button, Typography, Grid } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles, makeStyles } from '@material-ui/styles';\nimport {CssTextField, Subtitle, Brand} from '../../DefaultTheme'\n\n//COMPONENT\nclass PasswordInputSignIn extends Component {\n    render() {\n        const {onLogin, onPreview, onChange, error} = this.props\n        return (\n            <div className=\"both-centered\">\n                <Brand variant=\"h1\" > <Link to=\"/\" style={{ textDecoration: 'inherit', color:'linear-gradient(90deg, #39A6A3 30%, #BF1363 90%)'}}>NIGHTZONE</Link></Brand>\n                <Subtitle variant=\"h5\">What is your password?</Subtitle>\n                <CssTextField id=\"outlined-basic\" className=\"CustomInput\"label=\"Password\" variant=\"outlined\" type=\"password\" required onChange={onChange('password')} />\n                <Grid container spacing={24} direction=\"row\" justifyContent='center' alignItems=\"center\" >\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onPreview}>BACK</Button>\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onLogin}>NEXT</Button>\n                </Grid>                 \n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PasswordInputSignIn)","import React, { Component } from 'react'\nimport {Link} from  'react-router-dom';\nimport { TextField, Button, Typography, Grid } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles, makeStyles, responsiveFontSizes} from '@material-ui/styles';\nimport {CssTextField, Subtitle, Brand} from '../../DefaultTheme'\n\n\n//COMPONENT\nclass EmailInput extends Component {\n    render() {\n        const {onChange, onPreview, onNext, error, classes} = this.props\n\n\n        return (\n            <div className=\"both-centered\">\n                <Brand variant=\"h1\" > <Link to=\"/\" style={{ textDecoration: 'inherit', color:'linear-gradient(90deg, #39A6A3 30%, #BF1363 90%)'}}>NIGHTZONE</Link></Brand>\n                <Subtitle variant=\"h5\">What is your email address?</Subtitle>\n                <CssTextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" type=\"email\" required onChange={onChange('email')}/>\n                <Grid container spacing={24} direction=\"row\" justifyContent='center' alignItems=\"center\" >\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onPreview}>BACK</Button>\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onNext}>NEXT</Button>\n                </Grid> \n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\n export default withStyles(makeStyles)(EmailInput)","import React, { Component } from 'react'\nimport {Link} from  'react-router-dom';\nimport { TextField, Button, Grid } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {CssTextField, Subtitle, Brand} from '../../DefaultTheme'\n\nclass NameInput extends Component {\n    render() {\n        const {onNext, onPreview, onChange, error} = this.props\n        return (\n            <div className=\"both-centered\">\n                 <Brand variant=\"h1\" > <Link to=\"/\" style={{ textDecoration: 'inherit', color:'linear-gradient(90deg, #39A6A3 30%, #BF1363 90%)'}}>NIGHTZONE</Link></Brand>\n                <Subtitle variant=\"h5\">What is your name?</Subtitle>\n                <CssTextField id=\"outlined-basic\" label=\"First name\" variant=\"outlined\" type=\"text\" required onChange={onChange('firstName')} />\n                <CssTextField id=\"outlined-basic\" label=\"Last name\" variant=\"outlined\" type=\"text\" required onChange={onChange('lastName')} />\n                <Grid container spacing={24} direction=\"row\" justifyContent='center' alignItems=\"center\" >\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onPreview}>BACK</Button>\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onNext}>NEXT</Button>\n                </Grid> \n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default NameInput;\n\n","import React, { Component } from 'react'\nimport {Link} from  'react-router-dom';\nimport { Typography, TextField, Checkbox, Button, FormControlLabel, Grid,FormHelperText} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {CssTextField, Subtitle, Brand, CustomCheckbox} from '../../DefaultTheme'\n\nclass PasswordInputSignUp extends Component {\n\n    render() {\n        \n        const {onRegister, onPreview, onChange, onCheck, error} = this.props\n        return (\n            <div className=\"both-centered\">\n                <Brand variant=\"h1\" > <Link to=\"/\" style={{ textDecoration: 'inherit', color:'linear-gradient(90deg, #39A6A3 30%, #BF1363 90%)'}}>NIGHTZONE</Link></Brand>\n                <Subtitle variant=\"h5\">Choose a password </Subtitle>\n                <FormHelperText style={{color: '#DEEEEA'}}>Must have 6-16 characters in length and at least 1 number and 1 special character.</FormHelperText>\n                <CssTextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" required onChange={onChange('password')}/>\n                <CssTextField id=\"outlined-basic\" label=\"Confirm password\" variant=\"outlined\" type=\"password\" required onChange={onChange('confirmPassword')}/>\n               \n                <FormControlLabel control={<CustomCheckbox name=\"age\" required onChange={onCheck}/>}label={<Typography variant=\"body1\" style={{color: '#DEEEEA'}}>I am older than 18.</Typography>}/>\n                <Grid container spacing={24} direction=\"row\" justifyContent='center' alignItems=\"center\" >\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onPreview}>BACK</Button>\n                    <Button variant=\"contained\" className=\"CustomButton\" onClick={onRegister}>SIGN UP</Button>\n                </Grid> \n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default PasswordInputSignUp;","import React, { Component } from 'react'\nimport {withRouter} from  'react-router-dom';\nimport axios from 'axios';\nimport AuthStateZero from './AuthStateZero';\nimport PasswordInputSignIn from './PasswordInputSignIn';\nimport {API_URL} from '../../config.js'\nimport EmailInput from './EmailInput'\nimport NameInput from './NameInput'\nimport PasswordInputSignUp from './PasswordInputSignUp'\n\n/*\nstep == 1 // AuthStateZero\nstep == 2 // EmailInput\nstep == 3 // PasswordInputSignIn (when the email already exist in DB)\nstep == 4 // NameInput (when the email does not exist in DB)\nstep == 5 // PasswordInputSignUp \n*/\n\nclass Auth extends Component {\n    state = {\n        step: 1,\n        email: '',\n        firstName: '',\n        lastName: '',\n        password: '',\n        confirmPassword: '',\n        age: false,\n        error: null\n    }\n    \n    prevStep = () => {\n        const {step} = this.state\n        //if we are in the step 4 (nameInput) and we want to back, the screen that need to appears is the step 2(email) and not 3 (passwordInputSignIn)\n        if (step === 4) {\n            this.setState({ step: step -2})\n            return\n        }\n        this.setState({ step: step -1})\n    }\n\n    nextStep = () => {\n        console.log('mariana')\n        const {step} = this.state\n        this.setState({ step: step +1})\n    }\n\n    //here we are saving the things typed by the user in the state, to grab the information later on handleLogin or handleRegister\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleCheck = () => {\n        const {age} = this.state\n        if (age === true) {\n            this.setState({age: false})\n        } else {\n            this.setState({age: true})\n        }\n    } \n\n    //here we will check if the email typed by the user already exists in DB or not. If yes, go to step 3 (PasswordInputSignIn). If not, go to step 4(NameInput)\n    handleAuth = async () => {\n        try {\n            const {email} = this.state\n            const user = await axios.post(`${API_URL}/api/auth`, {email}, {withCredentials: true})          \n            if(user.data) {\n                this.setState({step: 3})\n            }\n            else {\n                this.setState({step: 4})\n            }\n        }   \n        catch (err){\n            console.log('Auth failed', err)\n        }\n    }\n\n    handleLogin = async () => {\n        try {\n            const {email, password} = this.state\n            let myUser = { \n                email: email,\n                password: password\n            }\n            const response = await axios.post(`${API_URL}/api/signin`, myUser, {withCredentials: true})\n            //if inside the response we have an error, grab the error from backend\n            if (response.data.errorMessage) {\n                await this.setState({...this.state, error: response.data.errorMessage})\n                 console.log(this.state)\n                 return\n             }\n            \n            //this is for changing the state of the user (from null to the response.data):\n            const {onAuth} = this.props\n            onAuth(response.data)\n            this.props.history.push('/events')\n        }   \n        catch (err){\n            console.log('Log in failed', err)\n        }\n    }\n\n    handleRegister = async () => {\n        try {\n            const {email, firstName, lastName, password, confirmPassword, age} = this.state\n            if (age === false) {\n                this.setState({\n                    ...this.state, error: \"Underage\"\n                })\n                return\n            }\n            let newUser = { \n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                password: password,\n                confirmPassword: confirmPassword\n            }\n            const response = await axios.post(`${API_URL}/api/signup`, newUser, {withCredentials: true})\n            console.log(response.data.errorMessage)\n            //if inside the response we have an error, grab the error from backend\n            if (response.data.errorMessage) {\n               await this.setState({...this.state, error: response.data.errorMessage})\n                console.log(this.state)\n                return\n            }\n            //this is for changing the state of the user (from null to the response.data):\n            const {onAuth} = this.props\n            onAuth(response.data)\n            this.props.history.push('/events')\n        }\n        catch (err) {\n            console.log('Register failed', err)\n        }\n    }\n\n    render() {\n        const {onFacebookResponse, onGoogleResponse} = this.props\n        const { step } = this.state;\n        const {error} = this.state\n        switch (step) {\n            case 1: \n                return (\n                    <AuthStateZero onFacebookResponse={onFacebookResponse} onGoogleResponse={onGoogleResponse} onNext={this.nextStep} />\n                )\n            case 2: \n                return (\n                    <EmailInput onNext={this.handleAuth} onPreview={this.prevStep} onChange={this.handleChange} error={error}/>\n                )\n            case 3: \n                return (\n                    <PasswordInputSignIn onLogin={this.handleLogin} onPreview={this.prevStep} onChange={this.handleChange} error={error}/>\n                )\n                case 4:\n                    return (\n                        <NameInput onNext={this.nextStep} onPreview={this.prevStep} onChange={this.handleChange} error={error}/>\n                    )\n            case 5:\n                return (\n                    <PasswordInputSignUp onRegister={this.handleRegister} onPreview={this.prevStep} onCheck={this.handleCheck} onChange={this.handleChange} error={error}/>\n                )\n            default: \n        }\n    \n    }\n}\n\nexport default withRouter(Auth);\n","import React, { Component } from 'react'\nimport { Grid, Button, InputLabel, Select, MenuItem} from '@material-ui/core';\nimport {CssTextField, CustomDateInput, CustomSelect} from '../../DefaultTheme'\n\n\nclass Filter extends Component {\n\n    render() {\n        return (\n            <Grid flexDirection=\"row\">\n                \n                <CssTextField id=\"outlined-basic\" label=\"Search for a party\" variant=\"outlined\" type=\"text\" value={this.props.text} onChange={this.props.onSearch}/>\n                <CustomDateInput\n                    variant=\"outlined\"\n                    id=\"date\"\n                    label=\"Start date\"\n                    type=\"date\"\n                    defaultValue={new Date().getDate()+\"-\"+(new Date().getMonth()+1)+\"-\"+new Date().getFullYear()}\n                    value={this.props.startDate}\n                    onChange={this.props.onDate}\n                    InputLabelProps={{\n                        shrink: true\n                    }}\n                />\n                <CustomSelect variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    onChange={this.props.onCity}\n                    label=\"City\"\n                    value={this.props.city}\n                    >\n                    {this.props.cities.map((option, i) => (\n                        <MenuItem key={i} value={option}>\n                        {option}\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </CustomSelect>\n                <CustomSelect variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Ticket type</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    label=\"Ticket type\"\n                    value={this.props.ticketType}\n                    onChange={this.props.onTicketType}\n                    >\n                        <MenuItem value=\"free\">Free</MenuItem>\n                        <MenuItem value=\"paid\"> Paid</MenuItem>\n                    </Select>\n                </CustomSelect>\n                <Button variant=\"outlined\" className=\"CustomStrokeButton\"onClick={this.props.onClean}>CLEAR</Button>\n            </Grid>\n        )\n    }\n}\n\nexport default Filter;","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Link, Redirect, withRouter} from \"react-router-dom\";\nimport {API_URL} from '../../config.js'\nimport { Tooltip, CardActionArea, Card, CardMedia, IconButton, CardContent, CardActions, Typography, Divider, AppBar, Tab, LinearProgress, Avatar, Collapse} from '@material-ui/core'\nimport { Grid, Button } from '@material-ui/core';\nimport { TabList, TabPanel, TabContext, Alert} from '@material-ui/lab'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Filter from './Filter.jsx'\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport EventIcon from '@material-ui/icons/Event';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\nimport PoolIcon from '@material-ui/icons/Pool';//Swimming Pool category\nimport LocalBarIcon from '@material-ui/icons/LocalBar'; //Drinks category\nimport DeckIcon from '@material-ui/icons/Deck';//Outdoor party category\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';//Music category\nimport EmojiNatureIcon from '@material-ui/icons/EmojiNature';//Costume category\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports'; //Game party category\nimport MicIcon from '@material-ui/icons/Mic';//karaoke category\nimport HouseIcon from '@material-ui/icons/House';//house party category\nimport {BorderLinearProgress, BorderLinearProgressMid, BorderLinearProgressRock} from '../../DefaultTheme'\n\nclass EventsList extends Component {\n\n    state = {\n        events:[],\n        hotzone: [],\n        value: \"1\",\n        progress: 0,\n        expandedId: -1,\n        showFilter: false,\n        filteredEvents: [],\n        searchText: '',\n        startDate: null,\n        ticketType: null,\n        cities: [],\n        city: null\n    }\n\n    componentDidMount = async () => {\n        try {\n            let response = await axios.get(`${API_URL}/api/events`, {withCredentials: true})\n            this.setState({\n                events: response.data,\n                filteredEvents: response.data\n        })\n\n            response.data.forEach((elem) => {\n                !this.state.cities.includes(elem.city) && this.state.cities.push(elem.city)\n            })\n\n            let eventsFiltered = await axios.get(`${API_URL}/api/events/hotzone`, {withCredentials: true})\n            this.setState({\n                hotzone: eventsFiltered.data.eventsFiltered,\n                progress: eventsFiltered.data.progress\n        })\n\n        }\n        catch (err) {\n            console.log('Event fetch failed', err)\n        }\n    }\n\n   a11yProps(index) {\n        return {\n          id: `scrollable-auto-tab-${index}`,\n          \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n        };\n      }\n\n    handleChange = async (e, newValue) => {\n        this.setState({\n            value: newValue\n        })\n    }\n\n    getCategoryIcon = (category) => {\n        switch(category) {\n            case 'houseParty':\n                return <HouseIcon/>\n                break;\n            case 'outdoorParty':\n                return <DeckIcon/>\n                break;\n            case 'music':\n                return <AudiotrackIcon/>\n                break;\n            case 'karaoke':\n                return <MicIcon/>\n                break;\n            case 'gameParty':\n                return <SportsEsportsIcon/>\n                break;\n            case 'drinks':\n                return <LocalBarIcon/>\n                break;\n            case 'costumeParty':\n                return <EmojiNatureIcon/>\n                break;\n            case 'swimmingPool':\n                return <PoolIcon/>\n                break;\n            default: \n          }\n    }\n\n    handleExpandedId = async (i) => {\n        this.setState({\n            expandedId: this.state.expandedId === i ? -1 : i\n        })\n        \n    }\n\n    handleProgress = (progress) => {\n        const progressInt = Math.round(progress)\n        if (progressInt<20){\n            return <Tooltip title={\"This party could be better\"} >\n                        <BorderLinearProgress variant=\"determinate\" value={progress}/> \n                    </Tooltip>\n        } else if (progressInt>=20 && progressInt<50){\n            return <Tooltip title={\"Maybe this party get better. You should try.\"} >\n                        <BorderLinearProgressMid variant=\"determinate\" value={progress}/> \n                    </Tooltip>\n        } else {\n            return <Tooltip title={\"This party is rocking and you are missing. RUN!\"} >\n                        <BorderLinearProgressRock variant=\"determinate\" value={progress}/> \n                    </Tooltip>\n        }\n    }\n\n\n\n\n    handleShowFilters = async () => {\n        const {showFilter} = this.state\n        if (showFilter) {\n            await this.setState({\n                showFilter: false\n            }) \n        } \n        else {\n            await this.setState({\n                showFilter: true\n            })      \n        }\n    }\n\n    handleSearchName = async (e) => {\n        let searchedEvent = e.target.value\n        await this.setState({searchText: searchedEvent})\n        this.handleFilterGeneral()\n    }\n\n    filterDate = async (e) => {\n        let searchedDate = e.target.value\n        await this.setState({startDate: searchedDate})\n        this.handleFilterGeneral()\n    }\n\n    filterCity = async (e) => {\n        let searchedCity = e.target.value\n        await this.setState({city: searchedCity})\n        this.handleFilterGeneral()\n    }\n\n    filterTicketType = async (e) => {\n        let searchedType = e.target.value\n        await this.setState({ticketType: searchedType})\n        this.handleFilterGeneral()\n    }\n\n    handleFilterGeneral = async () => {\n        const {events, searchText, startDate, ticketType, city} = this.state\n        let filteredEvents = events\n\n        if(searchText !== '') {\n            filteredEvents = filteredEvents.filter((event) => {\n                return event.name.toLowerCase().includes(searchText.toLowerCase())\n            })\n        }\n        \n        if(startDate !== null) {\n            filteredEvents= filteredEvents.filter((event) => {\n                let filterDate = startDate\n                let day = new Date(event.start).getDate();\n                let month = new Date(event.start).getMonth() + 1;\n                let year = new Date(event.start).getFullYear();\n                if (day < 10) {\n                    day = '0' + day;\n                }\n                if (month < 10) {\n                    month = '0' + month;\n                }\n                let dateFormated = year + '-' + month + '-' + day;\n                \n                console.log(filterDate, 'filterdate')\n                console.log(dateFormated, 'eventStartDate')\n                return filterDate == dateFormated\n            })\n        }\n        \n        if (ticketType !== null) {\n            filteredEvents = filteredEvents.filter((event) => {\n                if (ticketType == \"paid\") {\n                    return event.isPaid \n                } else {\n                    return event.isPaid == false\n                }\n                \n            })\n        }\n\n        if (city !== null) {\n            filteredEvents = filteredEvents.filter((event) => {\n                return event.city == city\n            })\n        }\n\n        // update the events state to filteredEvents \n        await this.setState({\n            filteredEvents: filteredEvents\n        })\n    }\n\n    handleClean = async () => {\n        await this.setState({\n            searchText: '',\n            startDate: \"\",\n            ticketType: null,\n            city: null,\n            filteredEvents: this.state.events\n        })\n    }\n\n    render() {\n        {\n            if (!this.props.user) {\n                //redirect to auth page \n                return <Redirect to={'/auth'} />\n            }\n        }\n        const {events, value, hotzone, progress, showFilter, filteredEvents, cities, searchText, city, startDate, ticketType} = this.state\n        return (\n\n            <div style={{marginTop: '60px'}}>\n                <TabContext value={value}>\n                    <AppBar color=\"#231E23\" position=\"fixed\">\n                        <TabList onChange={this.handleChange} aria-label=\"simple tabs example\" value={value} >\n                            <Tab label=\"Next events\" value=\"1\" style={{color: '#DEEEEA', fontWeight: 700}} {...this.a11yProps(0)} />\n                            <Tab label=\"Hot zone\" value=\"2\" style={{color: '#DEEEEA', fontWeight: 700}} {...this.a11yProps(1)}/>\n                        </TabList>\n                    </AppBar>\n                    <TabPanel value=\"1\">\n                    <Button variant=\"outlined\" className=\"CustomStrokeButton\" onClick={this.handleShowFilters}><FilterListIcon/>Filters</Button>\n                    {\n                        showFilter && <Filter onSearch={this.handleSearchName} text={searchText} city={city} startDate={startDate} ticketType={ticketType} onDate={this.filterDate} onTicketType={this.filterTicketType} cities={cities} onCity={this.filterCity} onClean={this.handleClean}/>\n                    }\n                        \n                            <Grid container spacing={3} flexPosition=\"row\">\n                            {\n                            filteredEvents.map((event, i) => {\n                            return <>\n                                <Grid item xs={12} sm={6} md={4} lg={3} xl={2} spacing={5} >\n                                <Card key={i} style={{ backgroundColor: 'transparent' }}>\n                                <Link to={`/events/${event._id}`} style={{ textDecoration: 'none', color:\"#DEEEEA\" }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                        component=\"img\"\n                                        alt=\"image-event\"\n                                        height=\"300px\"\n                                        image={`${event.imageEvent}`}\n                                        title=\"image-event\"\n                                        />\n                                        <CardContent>\n                                        <Grid container wrap=\"nowrap\" spacing={2}>\n                                               \n                                        </Grid>\n                                            <Grid container flexPosition=\"column\">\n                                                {/* NAME */}\n                                                <Grid>\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{fontWeight: 700}}>\n                                                        {event.name}\n                                                    </Typography>\n                                                <Divider light />\n                                                </Grid>                                       \n                                                {/* START */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                    <Grid item>\n                                                        <EventIcon/>\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {event.start} \n                                                        </Typography>\n                                                    </Grid>\n                                                   \n                                                </Grid>\n                                                <Divider light />\n                                                {/* ADDRESS */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                    <Grid item>\n                                                        <PlaceIcon/>\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {event.address} \n                                                        </Typography>\n                                                    </Grid>\n                                                   \n                                                </Grid>\n                                                <Divider light />\n                                                {/* TICKETS AVAILABLE */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                        <Grid item>\n                                                            <ConfirmationNumberIcon/>\n                                                        </Grid>\n                                                        <Grid item xs>\n                                                                <Typography variant=\"body2\" component=\"p\">\n                                                                    {event.capacity - event.ticketsSold.length} tickets available\n                                                                </Typography>\n                                                        </Grid>         \n                                                </Grid>\n                                                {/* CATEGORIES*/}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                {\n                                                    event.categories.map((category) => {\n                                                        return <div>\n                                                            <Grid item xs>{\n                                                                this.getCategoryIcon(category)\n                                                            }\n                                                            </Grid>  \n                                                        </div>\n                                                    })\n                                                }\n                                                </Grid>\n                                            </Grid>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Link>\n                            </Card>\n                                </Grid>\n                            </>\n                            })\n                        }\n                            </Grid>\n                         \n                            \n                        \n                    </TabPanel>\n                    <TabPanel value=\"2\">\n                        <Grid container spacing={3} flexPosition=\"row\">\n                            {\n                            hotzone.map((zoneEvent, i) => {\n                            return <>\n                                <Grid item xs={12} sm={6} md={4} lg={3} xl={2} spacing={5} >\n                                <Card key={i} style={{ backgroundColor: 'transparent' }}>\n                                <Link to={`/events/${zoneEvent._id}`} style={{ textDecoration: 'none', color:\"#DEEEEA\" }}>\n                                    <CardActionArea>\n                                        <CardMedia\n                                        component=\"img\"\n                                        alt=\"image-event\"\n                                        height=\"300px\"\n                                        image={`${zoneEvent.imageEvent}`}\n                                        title=\"image-event\"\n                                        />\n                                            {\n                                            this.handleProgress(progress)\n                                            }\n                                        <CardContent>\n                                            <Grid container flexPosition=\"column\">\n                                                {/* NAME */}\n                                                <Grid>\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{fontWeight: 700}}>\n                                                        {zoneEvent.name}\n                                                    </Typography>\n                                                <Divider light />\n                                                </Grid>                                       \n                                                {/* START */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                    <Grid item>\n                                                        <EventIcon/>\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {zoneEvent.start} \n                                                        </Typography>\n                                                    </Grid>\n                                                   \n                                                </Grid>\n                                                <Divider light />\n                                                {/* ADDRESS */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                    <Grid item>\n                                                        <PlaceIcon/>\n                                                    </Grid>\n                                                    <Grid item xs>\n                                                        <Typography variant=\"body2\" component=\"p\">\n                                                            {zoneEvent.address} \n                                                        </Typography>\n                                                    </Grid>\n                                                   \n                                                </Grid>\n                                                <Divider light />\n                                                {/* TICKETS AVAILABLE */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                        <Grid item>\n                                                            <ConfirmationNumberIcon/>\n                                                        </Grid>\n                                                        <Grid item xs>\n                                                                <Typography variant=\"body2\" component=\"p\">\n                                                                    {zoneEvent.capacity - zoneEvent.ticketsSold.length} tickets available\n                                                                </Typography>\n                                                        </Grid>         \n                                                </Grid>\n                                                {/* CATEGORIES*/}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                {\n                                                    zoneEvent.categories.map((category) => {\n                                                        return <div>\n                                                            <Grid item xs>{\n                                                                this.getCategoryIcon(category)\n                                                            }\n                                                            </Grid>  \n                                                        </div>\n                                                    })\n                                                }\n                                                </Grid>\n                                                {/* CHECK IN */}\n                                                <Grid container wrap=\"nowrap\" spacing={2}>\n                                                        <Grid item>\n                                                            <Typography style={{fontWeight: 700}}>{zoneEvent.checkIn.length}</Typography>\n                                                        </Grid>\n                                                        <Grid item xs>\n                                                                <Typography variant=\"body2\" component=\"p\">\n                                                                    people checked in\n                                                                </Typography>\n                                                        </Grid>         \n                                                </Grid>\n                                            </Grid>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Link>\n                                <CardActions disableSpacing>\n                                                <IconButton\n                                                onClick={() => this.handleExpandedId(i)}\n                                                aria-expanded={this.state.expandedId === i}\n                                                aria-label=\"show more\"\n                                                >\n                                                <ExpandMoreIcon />\n                                                </IconButton>\n                                            </CardActions>\n                                            <Collapse in={this.state.expandedId === i} timeout=\"auto\" unmountOnExit>\n                                                <CardContent>\n                                                    <Grid container wrap=\"nowrap\" spacing={2}>\n                                                        {\n                                                        zoneEvent.checkIn.map((user) => {\n                                                            return  <Grid item>\n                                                                        <Link to={`${`/account/${user._id}`}`}> \n                                                                            <Tooltip title={`${user.firstName} ${user.lastName}`} >\n                                                                                <Avatar alt=\"user photo\" src={`${user.imageAccount}`} />\n                                                                            </Tooltip>\n                                                                        </Link>\n                                                                    </Grid>\n                                                        })\n                                                    }\n                                                    </Grid>\n                                                \n                                                </CardContent>\n                                            </Collapse>\n                            </Card>\n                                </Grid>\n                            </>\n                            })\n                        }\n                            </Grid>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                    </TabPanel>\n                </TabContext>\n            </div>\n        )\n    }\n    \n}\n\nexport default withRouter(EventsList);\n\n\n","import React, { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {API_URL} from '../../config.js'\nimport axios from 'axios';\nimport {\n  CardElement,\n  useStripe,\n  useElements\n} from \"@stripe/react-stripe-js\";\nimport Styles from './CheckoutForm.css'\n\n\nfunction CheckoutForm(props) {\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [processing, setProcessing] = useState('');\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const {eventId, user} = props\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(`${API_URL}/api/create-payment-intent`, {\n        method: \"POST\",\n        credentials: 'include', //needed this line, because without it is not getting the user (user = undefined). Because how we are not using axios, we can't pass \"withCredentials\".\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ eventId }) //eventId = eventId that we passed as a props in the EventDetail\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret);\n      });\n  }, []);\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n      //if the payment is successful, we need to call our payment route\n      try {\n        await axios.get(`${API_URL}/api/events/${eventId}/buy`, {withCredentials: true})\n        console.log(props)\n        props.history.push(`/account/${user._id}}`)\n      }\n      catch(err) {\n          console.log('Event fetch failed', err)\n      }\n    }\n  };\n\n  return (\n    <div>\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n      <button\n        disabled={processing || disabled || succeeded}\n        id=\"submit\"\n      >\n        <span id=\"button-text\">\n          {processing ? (\n            <div className=\"spinner\" id=\"spinner\"></div>\n          ) : (\n            \"Pay now\"\n          )}\n        </span>\n      </button>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n        Payment succeeded, see the result in your\n        <a\n          href={`https://dashboard.stripe.com/test/payments`}\n        >\n          {\" \"}\n          Stripe dashboard.\n        </a> Refresh the page to pay again.\n      </p>\n    </form>\n    </div>\n    \n  );\n}\n\nexport default withRouter(CheckoutForm);","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass Payment extends Component {\n\n\n    render() {\n        const promise = loadStripe(\"pk_test_51JFxmQGLw6mfE9JvfuXfSeVyUAiedGg0atoexZN0VMTrvtdSsIqfWycGgvcym3tSYV8eElXrGlHobUphaJe5z8ko00MEIHTnt7\")\n        const {eventId, onClose, user} = this.props\n        return (\n            <div>\n                <CloseIcon onClick={onClose}/>\n                <Elements stripe={promise}>\n                    <CheckoutForm eventId={eventId}\n                    user={user}/>\n                </Elements>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Payment);","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport {API_URL} from '../../config.js'\nimport {CircularProgress, Grid, Button, Avatar, Typography, Divider, TextField} from '@material-ui/core'\n// import { loadStripe } from \"@stripe/stripe-js\";\n// import { Elements } from \"@stripe/react-stripe-js\";\n// import CheckoutForm from \"./CheckoutForm\";\nimport EventIcon from '@material-ui/icons/Event';\nimport PlaceIcon from '@material-ui/icons/Place';\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\nimport PoolIcon from '@material-ui/icons/Pool';//Swimming Pool category\nimport LocalBarIcon from '@material-ui/icons/LocalBar'; //Drinks category\nimport DeckIcon from '@material-ui/icons/Deck';//Outdoor party category\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';//Music category\nimport EmojiNatureIcon from '@material-ui/icons/EmojiNature';//Costume category\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports'; //Game party category\nimport MicIcon from '@material-ui/icons/Mic';//karaoke category\nimport HouseIcon from '@material-ui/icons/House';//house party category\nimport Payment from \"./Payment\";\nimport {CssTextField, Subtitle, Brand} from '../../DefaultTheme'\nimport PersonIcon from '@material-ui/icons/Person';\nimport GroupIcon from '@material-ui/icons/Group';\nimport EuroIcon from '@material-ui/icons/Euro';\n\nclass EventDetail extends Component {\n\n    state = {\n        eventDetail: null,\n        showPayment: false,\n        canBuy: true,\n        user: null,\n        fetchingUser: true, \n        comment: \"\",\n        comments: []\n    }\n\n    componentDidMount = async () => {\n        try {\n            let userResponse = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n            await this.setState({\n              user: userResponse.data,\n              fetchingUser: false,\n            })\n            //check the `<Routes>` in App.js. That's where the params `eventId` comes from\n            let eventId = this.props.match.params.eventId\n            let response = await axios.get(`${API_URL}/api/events/${eventId}`, {withCredentials: true})\n            this.setState({\n                eventDetail: response.data.event,\n                comments: response.data.event.comments,\n                canBuy: response.data.canBuy\n            })\n\n        }  \n        catch(err){\n            console.log('Event fetch failed', err)\n        }\n    }\n\n    handleShowPayment = async() => {\n        await this.setState({\n            ...this.state, showPayment: true\n        })\n    }\n\n    handleClosePayment = async () => {\n        await this.setState({\n            showPayment: false\n        })\n    }\n\n\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleSubmit = async () => {\n        const {comment} = this.state\n        let eventId = this.props.match.params.eventId\n        let commentCreated = await axios.post(`${API_URL}/api/events/${eventId}/comment`, {comment}, {withCredentials: true})\n        console.log(commentCreated)\n        await this.setState({\n            comments: [commentCreated.data.myCommentPopulated, ...this.state.comments,],\n            comment: \"\"\n        })\n\n        let sortedComments = this.state.comments.sort((a,b) => {\n            if (a.date > b.date) {\n                return -1\n            } else if (a.date < b.date){\n                return 1\n            } else {\n                return 0\n            }\n        })\n        \n        await this.setState({\n            comments: sortedComments\n        })\n\n        this.props.history.push(`/events/${eventId}`)\n    }\n\n    getCategoryIcon = (category) => {\n        switch(category) {\n            case 'houseParty':\n                return <HouseIcon/>\n                break;\n            case 'outdoorParty':\n                return <DeckIcon/>\n                break;\n            case 'music':\n                return <AudiotrackIcon/>\n                break;\n            case 'karaoke':\n                return <MicIcon/>\n                break;\n            case 'gameParty':\n                return <SportsEsportsIcon/>\n                break;\n            case 'drinks':\n                return <LocalBarIcon/>\n                break;\n            case 'costumeParty':\n                return <EmojiNatureIcon/>\n                break;\n            case 'swimmingPool':\n                return <PoolIcon/>\n                break;\n            default: \n          }\n    }\n\n    render() {\n        if (!this.state.eventDetail) {\n            return <CircularProgress color=\"secondary\" />\n        } \n\n        {\n            if (!this.state.user) {\n                //redirect to signin page \n                return <Redirect to={'/auth'} />\n            }\n        }\n        \n        const {eventDetail, showPayment, canBuy, comments} = this.state\n        const {user} = this.props\n        // const promise = loadStripe(\"pk_test_51JFxmQGLw6mfE9JvfuXfSeVyUAiedGg0atoexZN0VMTrvtdSsIqfWycGgvcym3tSYV8eElXrGlHobUphaJe5z8ko00MEIHTnt7\")\n        return (\n            <Grid container flexDirection=\"column\" className=\"both-centered\" style={{color:\"#DEEEEA\"}}>\n                <Grid item>\n                    <img src={`${eventDetail.imageEvent}`} alt=\"event image\" height=\"400px\" />\n                </Grid>\n                <Grid item>\n                    <Subtitle style={{fontWeight: 700, fontSize: '1.8rem'}}>{eventDetail.name}</Subtitle>\n                </Grid>                               \n                {/* START */}\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                     <Grid item>\n                        <EventIcon/>\n                    </Grid>\n                    <Grid item xs>\n                    <Typography>\n                        {eventDetail.start} \n                    </Typography>\n                    </Grid>\n                    </Grid>\n                    <Divider light />\n                    {/* ADDRESS */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <PlaceIcon/>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography>\n                                {eventDetail.address} \n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider light />\n                    {/* HOST */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <PersonIcon/>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography>\n                                {eventDetail.host.firstName} {eventDetail.host.lastName}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider light />\n                    {/* TICKETS SOLD */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <GroupIcon/>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography>\n                                {eventDetail.ticketsSold.length} people will join\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Divider light />\n                    {/* TICKETS AVAILABLE */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <ConfirmationNumberIcon/>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography >\n                                {eventDetail.capacity - eventDetail.ticketsSold.length} tickets available\n                            </Typography>\n                        </Grid>         \n                    </Grid>\n                    {/* ticket price */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <EuroIcon/>\n                        </Grid>\n                        <Grid item xs>\n                            <Typography >\n                            {eventDetail.ticketsPrice}\n                            </Typography>\n                        </Grid>  \n                        <Grid item xs>\n                        {\n                            //if there is ticket available and the state showPayment is true, show the Payment form. If not, check if the canBuy is true, and if yes show the button to BUY a ticket. If not, show nothing.\n                            eventDetail.capacity - eventDetail.ticketsSold.length > 0 && canBuy ? (showPayment) ? (<Payment eventId={eventDetail._id} onClose={this.handleClosePayment} user={user} />) : (<Button variant=\"contained\" color=\"primary\" onClick={this.handleShowPayment}>BUY</Button>) : \"\"   \n                        } \n                        </Grid>       \n                    </Grid>\n                    {/* DESCRIPTION */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item>\n                            <Typography >\n                                {eventDetail.ticketsPrice}\n                            </Typography>\n                        </Grid>\n\n                        {\n                            //if there is ticket available and the state showPayment is true, show the Payment form. If not, check if the canBuy is true, and if yes show the button to BUY a ticket. If not, show nothing.\n                            eventDetail.capacity - eventDetail.ticketsSold.length > 0 && canBuy ? (showPayment) ? (<Payment eventId={eventDetail._id} onClose={this.handleClosePayment} user={user} />) : (<Button variant=\"contained\" color=\"primary\" onClick={this.handleShowPayment}>BUY</Button>) : \"\"   \n                        } \n                    </Grid>       \n                  \n                    {/* CATEGORIES */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        {\n                            eventDetail.categories.map((category) => {\n                                return <div>\n                                    <Grid item xs>\n                                        <Button className=\"CustomFab\">{this.getCategoryIcon(category)}</Button>\n                                    </Grid>  \n                                </div>\n                            })\n                        }\n                    </Grid>\n                    {/* ADD A COMMENT */}\n                    <Grid container wrap=\"nowrap\" spacing={2}>\n                        <Grid item xs>\n                            <CssTextField\n                                id=\"outlined-textarea\"\n                                label=\"Comment\"\n                                placeholder=\"Add a comment\"\n                                onChange={this.handleChange('comment')}\n                                value={this.state.comment}\n                                multiline\n                                rows={4}\n                                variant=\"outlined\"\n                            />  \n                        </Grid>      \n                    </Grid>\n                        {/* SUBMIT COMMENT */}\n                        <Grid container wrap=\"nowrap\" spacing={2}>\n                            <Grid item xs>\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>SUBMIT</Button>\n                            </Grid> \n                        </Grid>\n                    {/* COMMENTS */}\n                    <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2}>\n                    {\n                        comments.map((comment) => {\n                            return <>\n                            <Grid container wrap=\"nowrap\" direction=\"column\" spacing={2} direction=\"row\">\n                                <Grid item ><Avatar alt=\"user photo\" src={`${comment.authorId.imageAccount}`}/></Grid>\n                                <Grid item xs><Typography>{comment.authorId.firstName} {comment.authorId.lastName}</Typography></Grid>\n                            </Grid>                            \n                            <Grid item ><Typography>{comment.date}</Typography></Grid> \n                            <Grid item ><Typography>{comment.comment}</Typography></Grid>\n                  \n                            </>\n                        })\n\n                    }\n                    </Grid>\n                   \n            </Grid>\n        )\n    }\n}\n\nexport default withRouter(EventDetail);\n","import React, { Component } from 'react'\nimport {withRouter} from  'react-router-dom';\nimport { TextField, Button} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nclass TitleEvent extends Component {\n    render() {\n        const {onNext, onChange, error} = this.props\n        return (\n            <div>\n                <p>What is the name of your event?</p>\n                <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\" type=\"text\" required onChange={onChange('name')}/>\n                <Button variant=\"contained\" color=\"primary\" onClick={onNext}>NEXT</Button>\n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TitleEvent);","import React, { Component } from 'react'\nimport { TextField, Button} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {withRouter} from  'react-router-dom';\n\nclass DateEvent extends Component {\n\n    render() {\n        const {onNext, onPreview, onChange, error} = this.props\n        return (\n            <div>\n                <p>When the event is going to happen?</p>\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"Start date and time\"\n                    type=\"datetime-local\"\n                    onChange={onChange('start')}\n                />\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"End date and time\"\n                    type=\"datetime-local\"\n                    onChange={onChange('end')}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={onPreview}>BACK</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={onNext}>NEXT</Button>\n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(DateEvent);","import React, { Component } from 'react'\nimport {withRouter} from  'react-router-dom';\nimport axios from 'axios'\nimport { TextField, Button, MenuItem, FormControl, InputLabel, Select } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nclass PlaceEvent extends Component {\n\n    state = {\n        countries: [],\n        country: null,\n        cities: []\n    }\n\n    componentDidMount = async () => {\n        try {\n            let response = await axios.get(`https://countriesnow.space/api/v0.1/countries`)\n            await this.setState ({\n                countries: response.data.data\n            })\n        }\n        catch (err) {\n            console.log('Countries fetch failed', err)\n        }\n    }\n\n    handleCountry = async (country) => {\n        this.props.onChange('country')(country)\n\n        await this.setState({\n            country: country.target.value\n        })\n\n        const countryTarget = this.state.countries.find((elem) => {\n           return  elem.country == this.state.country\n        })\n        const cities = countryTarget.cities\n        await this.setState({\n            cities: cities\n        })\n        console.log('cities', this.state.cities)\n    }\n\n    handleCity = async (city) => {\n\n        this.props.onChange('city')(city)\n    }\n\n    render() {\n        const { onPreview, onNext, onChange, error} = this.props\n        const {countries, cities} = this.state\n        return (\n            <div>\n                <p>Where the event is going to happen?</p>\n                <TextField id=\"outlined-basic\" label=\"Address\" variant=\"outlined\" type=\"text\" required onChange={onChange('address')}/>\n                {/* country */}\n                <FormControl variant=\"outlined\">\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={this.state.country}\n                    onChange={this.handleCountry}\n                    label=\"Country\"\n                    >\n                    {countries.map((option, i) => (\n                        <MenuItem key={i} value={option.country}>\n                        {option.country}\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n                {/* city */}\n\n                    {\n                      this.state.country !== null && <FormControl variant=\"outlined\">\n                      <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel>\n                      <Select\n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      onChange={this.handleCity}\n                      label=\"City\"\n                      >\n                      {cities.map((option, i) => (\n                          <MenuItem key={i} value={option}>\n                          {option}\n                          </MenuItem>\n                      ))}\n                      </Select>\n                  </FormControl> \n                    }\n                {/* buttons */}\n                <Button variant=\"contained\" color=\"primary\" onClick={onPreview}>BACK</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={onNext}>NEXT</Button>\n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PlaceEvent);\n","import React, { Component } from 'react'\nimport { TextField, Checkbox, Button, FormControlLabel } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {withRouter} from  'react-router-dom';\n\nclass PriceEvent extends Component {\n    render() {\n        const {onPreview, onNext, onChange, onCheck, error, isPaid} = this.props\n        console.log(isPaid)\n        return (\n            <div>\n                <FormControlLabel control={<Checkbox name=\"isPaid\" required onChange={onCheck}/>}label=\"The event is going to be paid.\"/>\n                { \n                    isPaid && <><p>How much is the ticket?</p> <TextField id=\"outlined-basic\" label=\"ticketsPrice\" variant=\"outlined\" type=\"number\" required onChange={onChange('ticketsPrice')}/> </> \n                }\n                <p>Which is the party capacity?</p>\n                <TextField id=\"outlined-basic\" label=\"capacity\" variant=\"outlined\" type=\"number\" required onChange={onChange('capacity')}/>\n                {/* buttons */}\n                <Button variant=\"contained\" color=\"primary\" onClick={onPreview}>BACK</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={onNext}>NEXT</Button>\n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(PriceEvent);\n","import React, { Component } from 'react'\nimport { TextField, Button } from '@material-ui/core';\nimport {withRouter} from  'react-router-dom';\nimport Alert from '@material-ui/lab/Alert';\n\nclass DescriptionEvent extends Component {\n    render() {\n        const { onPreview, onChange, onNext, onCheck, error, onAddImage} = this.props\n        return (\n            <div>\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Multiline\"\n                    placeholder=\"Description \"\n                    multiline\n                    rows={4}\n                    onChange={onChange('description')}\n                    variant=\"outlined\"\n                />            \n                <Button\n                    variant=\"contained\"\n                    component=\"label\"\n                    >\n                        Add an image\n                    <input\n                        type=\"file\"\n                        name=\"imageEvent\"\n                        accept=\"image/png, image/jpg\"\n                        onChange={onAddImage}\n                        hidden\n                    />\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={onPreview}>BACK</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={onNext}>NEXT</Button>\n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(DescriptionEvent);","import React, { Component } from 'react'\nimport { Checkbox, Button, FormControlLabel} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport {withRouter} from  'react-router-dom';\n\nclass CategoriesEvent extends Component {\n    render() {\n        const {onPreview, onCreate, onCheck, error} = this.props\n        return (\n            <div>\n                <p>How would you describe your party? (max 3 categories)</p>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('houseParty')}/>}label=\"House party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('outdoorParty')}/>}label=\"Outdoor party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('music')}/>}label=\"Music\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('karaoke')}/>}label=\"Karaoke\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('gameParty')}/>}label=\"Game party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('drinks')}/>}label=\"Drinks\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('costumeParty')}/>}label=\"Costume party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" onChange={() => onCheck('swimmingPool')}/>}label=\"Swimming pool\"/>\n                {/* buttons */}\n                <Button variant=\"contained\" color=\"primary\" onClick={onPreview}>BACK</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={onCreate}>CREATE</Button>\n                {\n                    error && <Alert severity=\"error\">{error}</Alert>\n                }  \n            </div>\n        )\n    }\n}\n\nexport default withRouter(CategoriesEvent);","import React, { Component } from 'react'\nimport {withRouter, Redirect} from  'react-router-dom';\nimport {API_URL} from '../../../config.js'\nimport axios from 'axios';\nimport TitleEvent from './TitleEvent'\nimport DateEvent from './DateEvent'\nimport PlaceEvent from './PlaceEvent'\nimport PriceEvent from './PriceEvent'\nimport DescriptionEvent from './DescriptionEvent'\nimport CategoriesEvent from './CategoriesEvent'\n\n/*\nstep == 1 // TitleEvent\nstep == 2 // DateEvent\nstep == 3 // PlaceEvent \nstep == 4 // PriceEvent \nstep == 5 // DescriptionEvent\nstep == 6 // CategoriesEvent\n*/\n\nclass CreateEvent extends Component {\n    state = {\n        user: this.props.user, \n        step: 1,\n        name: '',\n        start: '',\n        end: '',\n        address: '',\n        country: '',\n        city: '',\n        isPaid: false,\n        ticketsPrice: 0,\n        capacity: 0,\n        categories: [],\n        description: '',\n        imageEvent: '',\n        error: null\n    }\n\n    componentDidMount = async () => {\n        try {\n            let userResponse = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n            this.setState({\n              user: userResponse.data,\n              fetchingUser: false,\n            })\n        }  \n        catch(err){\n            console.log('User fetch failed', err)\n        }\n    }\n\n    prevStep = () => {\n        const {step} = this.state\n        this.setState({ step: step -1})\n    }\n\n    nextStep = () => {\n        console.log('mariana')\n        const {step} = this.state\n        this.setState({ step: step +1})\n    }\n\n    //here we are saving the things typed by the user in the state, to grab the information later on handleLogin or handleRegister\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleImage = (e) => {\n        console.log(e)\n        this.setState({ imageEvent: e.target.files[0] });\n    }\n\n    handleCheck = () => {\n        const {isPaid} = this.state\n        if (isPaid === false) {\n            this.setState({isPaid: true})\n        } else {\n            this.setState({isPaid: false})\n        }\n    } \n\n    handleCategories = async (category) => {\n        console.log(category)\n        try {\n            const {categories} = this.state\n            if(categories.includes(category)) {\n               const index = categories.indexOf(category)\n               console.log('index', index)\n               categories.splice(index, 1)\n               await this.setState({categories: categories})\n            } \n            else {\n                const newCategories = categories.concat(category)\n                await this.setState({\n                    categories: newCategories\n               })\n            }\n            console.log(this.state.categories)\n        }\n        catch (err) {\n            console.log('Categories failed', err)\n        }\n    } \n\n    handleCreate = async (e) => {\n        try {\n            let formData = new FormData()\n            formData.append('imageUrl', this.state.imageEvent)\n\n            let imgResponse = await axios.post(`${API_URL}/api/upload`, formData)\n            console.log(imgResponse)\n            const {name, start, end, address, country, city, isPaid, ticketsPrice, capacity, categories, description, imageEvent} = this.state\n            let newEvent = { \n                name: name, \n                start: start,\n                end: end, \n                address: address, \n                country: country, \n                city: city, \n                isPaid: isPaid, \n                ticketsPrice: ticketsPrice, \n                capacity: capacity, \n                categories: categories, \n                description: description, \n                imageEvent: imgResponse.data.image\n            }\n            console.log(newEvent)\n            const response = await axios.post(`${API_URL}/api/create`, newEvent, {withCredentials: true})\n            //if inside the response we have an error, grab the error from backend\n            if (response.data.errorMessage) {\n               await this.setState({...this.state, error: response.data.errorMessage})\n               return\n            }\n            //this is for changing the state of the user (from null to the response.data):\n            this.props.history.push('/events')\n        }\n        catch (err) {\n            console.log('Creation failed', err)\n        }\n    }\n\n    render() {\n        {\n            if (!this.state.user) {\n                //redirect to signin page \n                return <Redirect to={'/auth'} />\n            }\n        }\n        const { step } = this.state;\n        const {error} = this.state\n        switch (step) {\n            case 1: \n                return (\n                    <TitleEvent onNext={this.nextStep} onChange={this.handleChange} error={error}/>\n                )\n            case 2: \n                return (\n                    <DateEvent onNext={this.nextStep} onPreview={this.prevStep} onChange={this.handleChange} error={error}/>\n                )\n            case 3: \n                return (\n                    <PlaceEvent onLogin={this.handleLogin} onPreview={this.prevStep} onNext={this.nextStep} onChange={this.handleChange} error={error}/>\n                )\n                case 4:\n                    return (\n                        <PriceEvent onNext={this.nextStep} onPreview={this.prevStep} onChange={this.handleChange} onCheck={this.handleCheck} isPaid={this.state.isPaid} error={error}/>\n                    )\n            case 5:\n                return (\n                    <DescriptionEvent onNext={this.nextStep} onPreview={this.prevStep} onChange={this.handleChange} onAddImage={this.handleImage} error={error}/>\n                )\n            case 6:\n                return (\n                    <CategoriesEvent onCreate={this.handleCreate} onPreview={this.prevStep} onCheck={this.handleCategories} error={error}/>\n                )\n            default: \n        }\n    }\n}\n\nexport default withRouter(CreateEvent);\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Link, withRouter } from \"react-router-dom\";\nimport {API_URL} from '../../config.js'\nimport {CardActionArea, Card, CardMedia, Button, CardContent, Typography, Divider, AppBar, Tab} from '@material-ui/core'\nimport { TabList, TabPanel, TabContext} from '@material-ui/lab'\nclass Account extends Component {\n\n    state = {\n        value: 1,\n        ticketsBought: [],\n        eventsCreated: [],\n        user: this.props.user,\n        fetchingUser: true\n    }\n    \n    componentDidMount = async () => {\n        try {\n            let userResponse = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n            await this.setState({\n              user: userResponse.data,\n              fetchingUser: false,\n            })\n\n            let userId = this.props.match.params.userId\n            let response = await axios.get(`${API_URL}/api/account/${userId}`, {withCredentials: true})\n            await this.setState({\n                ticketsBought: response.data.ticketsBought,\n                eventsCreated: response.data.eventsCreated\n            })\n        }\n        catch (err) {\n            console.log('User events fetch failed', err)\n        }\n    }\n\n    handleCheckIn = async (eventId) => {\n        await axios.get(`${API_URL}/api/events/${eventId}/checkIn`, {withCredentials: true})\n        this.props.history.push('/events')\n    }\n\n    handleChange = async (e, newValue) => {\n        await this.setState({\n            value: newValue\n        })\n    }\n\n\n    render() {\n        const {value, ticketsBought, eventsCreated, user} = this.state\n        console.log(eventsCreated)\n        return (\n            <div>\n                { user !== null && this.props.match.params.userId !== user._id &&  <Link to={`/chat/${this.props.match.params.userId }`}><Button variant=\"contained\" color=\"primary\">CHAT</Button></Link>}\n                <TabContext value={value}>\n                    <AppBar position=\"static\">\n                        <TabList onChange={this.handleChange} aria-label=\"simple tabs example\">\n                            <Tab label=\"My tickets\" value=\"1\" />\n                            <Tab label=\"My events\" value=\"2\" />\n                        </TabList>\n                    </AppBar>\n                    <TabPanel value=\"1\">\n                        {\n                            ticketsBought.map((event, i) => {\n                                return <Card key={i} style={{ backgroundColor: 'transparent' }}>\n                                    <CardActionArea>\n                                        <Link to={`/events/${event.event._id}`} style={{ textDecoration: 'none' }}>\n                                            <CardMedia\n                                            component=\"img\"\n                                            alt=\"image-event\"\n                                            height=\"140\"\n                                            image={`${event.event.imageEvent}`}\n                                            title=\"image-event\"\n                                            />\n                                        </Link>\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                                                {event.event.name}\n                                            </Typography>\n                                            <Divider light />\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {event.event.start} \n                                            </Typography>\n                                            <Divider light />\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {event.event.address}\n                                            </Typography>\n                                            <Divider light />\n                                            {\n                                                event.canCheckIn && (<>\n                                                <p>Please, only click this button when the receptionist order to.</p>\n                                                <Button variant=\"contained\" color=\"primary\" onClick={() => this.handleCheckIn(event.event._id)}>CHECK IN</Button>\n                                                </>)\n                                            }\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            })\n                        }\n                    </TabPanel>\n                    <TabPanel value=\"2\">\n                        {\n                            eventsCreated.map((event, i) => {\n                                return <Card key={i} style={{ backgroundColor: 'transparent' }}>\n                                    <CardActionArea>\n                                        <Link to={`/events/${event._id}`} style={{ textDecoration: 'none' }}>\n                                            <CardMedia\n                                            component=\"img\"\n                                            alt=\"image-event\"\n                                            height=\"140\"\n                                            image={`${event.imageEvent}`}\n                                            title=\"image-event\"\n                                            />\n                                        </Link>\n                                        <CardContent>\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\" >\n                                                {event.name}\n                                            </Typography>\n                                            <Divider light />\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {event.ticketsSold.length} tickets sold\n                                            </Typography>\n                                            <Divider light />\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                                {event.checkIn.length} people checked in\n                                            </Typography>\n                                            <Divider light />\n                                            <Link to={`/events/${event._id}/edit`}>\n                                                <Button variant=\"contained\" color=\"primary\">EDIT</Button>\n                                            </Link>\n                                        </CardContent>\n                                    </CardActionArea>\n                                </Card>\n                            })\n                        }\n                    </TabPanel>\n                </TabContext>\n            </div>\n        )\n    }\n}\n\n\nexport default withRouter(Account);\n\n\n\n","import React, { Component } from 'react'\nimport {withRouter, Redirect} from  'react-router-dom';\nimport {API_URL} from '../../config.js'\nimport axios from 'axios';\nimport { TextField, Button, FormControl, InputLabel, Select, MenuItem, TextareaAutosize, Checkbox, FormControlLabel, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\nclass EditEvent extends Component {\n\n    state = {\n        eventDetail: null,\n        name: '',\n        start: '',\n        end: '',\n        address: '',\n        country: '',\n        city: '',\n        isPaid: false,\n        ticketsPrice: 0,\n        capacity: 0,\n        categories: [],\n        description: '',\n        imageEvent: '',\n        imageFile: '',\n        countriesOptions: [],\n        citiesOptions: [],\n        open: false, \n        user: this.props.user,\n        fetchingUser: true\n        // error: null\n    }\n\n    componentDidMount = async () => {\n        try {\n            let userResponse = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n            await this.setState({\n              user: userResponse.data,\n              fetchingUser: false,\n            })\n            //check the `<Routes>` in App.js. That's where the params `eventId` comes from\n            let eventId = this.props.match.params.eventId\n            let response = await axios.get(`${API_URL}/api/events/${eventId}`, {withCredentials: true})\n            await this.setState({\n                eventDetail: response.data.event,\n                name: response.data.event.name,\n                start: response.data.event.start,\n                end: response.data.event.end,\n                address: response.data.event.address,\n                country: response.data.event.country,\n                city: response.data.event.city,\n                isPaid: response.data.event.isPaid,\n                ticketsPrice:response.data.event.ticketsPrice,\n                capacity:response.data.event.capacity,\n                categories: response.data.event.categories,\n                description: response.data.event.description,\n                imageEvent: response.data.event.imageEvent,\n            })\n\n            let countries = await axios.get(`https://countriesnow.space/api/v0.1/countries`)\n            await this.setState ({\n                countriesOptions: countries.data.data\n            })\n\n            let cities = await axios.get(`https://countriesnow.space/api/v0.1/countries`)\n            const countryTarget = this.state.countriesOptions.find((elem) => {\n                return  elem.country == this.state.country\n             })\n            await this.setState({\n                 citiesOptions: countryTarget.cities\n            })\n        }  \n        catch(err){\n            console.log('Event fetch failed', err)\n        }\n    }\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleImage = async (e) => {\n        this.setState({ imageFile: e.target.files[0] });\n    }\n\n    handleCheck = () => {\n        const {isPaid} = this.state\n        if (isPaid === false) {\n            this.setState({isPaid: true})\n        } else {\n            this.setState({isPaid: false})\n        }\n    } \n\n    handleCategories = async (category) => {\n        console.log(category)\n        try {\n            const {categories} = this.state\n            if(categories.includes(category)) {\n               const index = categories.indexOf(category)\n               console.log('index', index)\n               categories.splice(index, 1)\n               await this.setState({categories: categories})\n            } \n            else {\n                const newCategories = categories.concat(category)\n                await this.setState({\n                    categories: newCategories\n               })\n            }\n            console.log(this.state.categories)\n        }\n        catch (err) {\n            console.log('Categories failed', err)\n        }\n    } \n\n    handleCountry = async (country) => {\n\n        await this.setState({\n            country: country\n        })\n\n        const countryTarget = this.state.countriesOptions.find((elem) => {\n           return  elem.country == this.state.country\n        })\n\n        const cities = countryTarget.cities\n        await this.setState({\n            citiesOptions: cities\n        })\n    }\n\n    handleCity = async (city) => {\n        this.handleChange('city')(city)\n    }\n\n    handleEditEvent = async () => {\n        try {\n            \n            let formData = new FormData()\n            if (this.state.imageFile) {\n                formData.append('imageUrl', this.state.imageFile)\n                let imgResponse = await axios.post(`${API_URL}/api/upload`, formData)\n                await this.setState({\n                    imageEvent: imgResponse.data.image\n                })\n            }\n\n            const {name, start, end, address, country, city, isPaid, ticketsPrice, capacity, categories, description, imageEvent} = this.state\n            let editedEvent = { \n                name: name, \n                start: start,\n                end: end, \n                address: address, \n                country: country, \n                city: city, \n                isPaid: isPaid,\n                ticketsPrice: isPaid == false ?  0 :  ticketsPrice,\n                capacity: capacity, \n                categories: categories, \n                description: description, \n                imageEvent: imageEvent\n            }\n\n\n            // pass a second parameter to the patch for sending info to your server inside req.body\n            let eventId = this.props.match.params.eventId\n            let response = await axios.patch(`${API_URL}/api/events/${eventId}`, editedEvent)\n\n            // if (response.data.event.errorMessage) {\n            //     await this.setState({...this.state, error: response.data.event.errorMessage})\n            //     return\n            //  }\n\n            let user = this.state.user\n            this.props.history.push(`/account/${user._id}`)\n\n        }\n        catch (err) {\n            console.log('Edit failed', err)\n        }\n        \n    }\n\n    handleClickOpen = async  () => {\n        await this.setState({\n            open: true\n        })\n    };\n    \n    handleClose = async () => {\n        await this.setState({\n            open: false\n        })\n    };\n\n    handleDeleteEvent = async () => {\n        try {\n            let eventId = this.props.match.params.eventId\n            await axios.delete(`${API_URL}/api/events/${eventId}`)\n            this.props.history.push(`/events`)\n\n        }\n        catch (err) {\n            console.log('Delete failed', err)\n        }\n    }\n\n    render() {\n        const {name, start, end, address, country, city, description, isPaid, ticketsPrice, capacity, categories, imageEvent} = this.state\n        {\n            if (!this.state.user) {\n                //redirect to auth page \n                return <Redirect to={'/auth'} />\n            }\n        }\n        return (\n            <div>\n                <TextField \n                    id=\"outlined-basic\" \n                    label=\"Name\" \n                    variant=\"outlined\" \n                    type=\"text\"\n                    value={name}\n                    onChange={this.handleChange('name')}\n                    required />\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"Start date and time\"\n                    type=\"datetime-local\"\n                    value={start}\n                    onChange={this.handleChange('start')}\n                    required\n                />\n                <TextField\n                    id=\"datetime-local\"\n                    label=\"End date and time\"\n                    type=\"datetime-local\"\n                    value={end}\n                    onChange={this.handleChange('end')}\n                    required\n                />\n                <TextField \n                    id=\"outlined-basic\" \n                    label=\"Address\" \n                    variant=\"outlined\" \n                    type=\"text\"\n                    value={address}\n                    onChange={this.handleChange('address')}\n                    required />\n                {/* country */}\n                <FormControl variant=\"outlined\" width=\"100px\">\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Country</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={country}\n                    onChange={this.handleCountry}\n                    label=\"Country\"\n                    >\n                    {this.state.countriesOptions.map((option, i) => (\n                        <MenuItem key={i} value={option.country}>\n                        {option.country}\n                        </MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n                {/* city */}\n                    {\n                      this.state.CountrySelected!== null && <FormControl variant=\"outlined\">\n                      <InputLabel id=\"demo-simple-select-outlined-label\">City</InputLabel>\n                      <Select \n                      labelId=\"demo-simple-select-outlined-label\"\n                      id=\"demo-simple-select-outlined\"\n                      value={city}\n                      onChange={this.handleCity}\n                      label=\"City\"\n                      >\n                      {this.state.citiesOptions.map((option, i) => (\n                          <MenuItem key={i} value={option}>\n                          {option}\n                          </MenuItem>\n                      ))}\n                      </Select>\n                  </FormControl> \n                    }\n                <FormControlLabel control={\n                    <Checkbox \n                    checked = {isPaid}\n                        name=\"isPaid\"   \n\n                            onChange={this.handleCheck}/>}\n                        label=\"The event is going to be paid.\"\n                    />\n                {\n                    \n                    isPaid && <><p>How much is the ticket?</p> <TextField id=\"outlined-basic\" label=\"ticketsPrice\" variant=\"outlined\" type=\"number\" value={ticketsPrice}required onChange={this.handleChange('ticketsPrice')}/> </> \n                }\n                <p>Which is the party capacity?</p>\n                <TextField id=\"outlined-basic\" label=\"capacity\" variant=\"outlined\" type=\"number\" value={capacity} required onChange={this.handleChange('capacity')}/>\n\n                <TextField\n                    id=\"outlined-textarea\"\n                    label=\"Multiline\"\n                    placeholder=\"Description \"\n                    multiline\n                    value={description}\n                    rows={4}\n                    onChange={this.handleChange('description')}\n                    variant=\"outlined\"\n                />  \n                                \n                <Button\n                    variant=\"contained\"\n                    component=\"label\"\n                    >\n                        Add an image\n                    <input\n                        type=\"file\"\n                        name=\"imageEvent\"\n                        accept=\"image/png, image/jpg\"\n                        onChange={this.handleImage}\n                        hidden\n                    />\n                </Button>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"houseParty\")} onChange={() => this.handleCategories('houseParty')}/>}label=\"House party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"outdoorParty\")} onChange={() => this.handleCategories('outdoorParty')}/>}label=\"Outdoor party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"music\")} onChange={() => this.handleCategories('music')}/>}label=\"Music\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"karaoke\")} onChange={() => this.handleCategories('karaoke')}/>}label=\"Karaoke\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"gameParty\")} onChange={() => this.handleCategories('gameParty')}/>}label=\"Game party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"drinks\")} onChange={() => this.handleCategories('drinks')}/>}label=\"Drinks\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"costumeParty\")} onChange={() => this.handleCategories('costumeParty')}/>}label=\"Costume party\"/>\n                <FormControlLabel control={<Checkbox name=\"categories\" checked={categories.includes(\"swimmingPool\")} onChange={() => this.handleCategories('swimmingPool')}/>}label=\"Swimming pool\"/>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleEditEvent}>EDIT</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen} >DELETE</Button>\n\n                {/* dialog */}\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete this event?\"}</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        This action cannot be undone.\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        No\n                    </Button>\n                    <Button onClick={this.handleDeleteEvent} color=\"primary\" autoFocus>\n                        Yes\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* {\n                    this.state.error && <Alert severity=\"error\">{this.state.error}</Alert>\n                } */}\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditEvent);","import React, { Component } from 'react'\nimport {withRouter} from  'react-router-dom';\nimport {API_URL} from '../../config.js'\nimport axios from 'axios';\nimport { TextField, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\n\n\nclass EditAccount extends Component {\n\n    state = {\n        user: this.props.user,\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        imageAccount: \"\",\n        imageFile: null,\n        open: false,\n        error: null\n    }\n\n    componentDidMount = async () => {\n        try {\n            let response = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n            await this.setState({ \n                user: response.data,\n                firstName: response.data.firstName,\n                lastName: response.data.lastName,\n                email: response.data.email,\n                password: response.data.password,\n                confirmPassword: response.data.password,\n                imageAccount: response.data.imageAccount\n            })\n\n\n\n        }\n        catch (err) {\n            console.log('User fetch failed', err)\n        }\n    }\n\n    handleChange = input => e => {\n        this.setState({ [input]: e.target.value });\n    }\n\n    handleImage = (e) => {\n        console.log(e)\n        this.setState({ imageFile: e.target.files[0] });\n    }\n    \n    handleEditAccount = async () => {\n        try {\n\n\n            let formData = new FormData()\n            if (this.state.imageFile) {\n                formData.append('imageUrl', this.state.imageFile)\n                let imgResponse = await axios.post(`${API_URL}/api/upload`, formData)\n                await this.setState({\n                    imageAccount: imgResponse.data.image\n                })\n            }\n           \n\n\n            const {firstName, lastName, email, password, confirmPassword, imageAccount} = this.state\n\n            let editedAccount = { \n                firstName: firstName, \n                lastName: lastName,\n                email: email, \n                password: password, \n                confirmPassword: confirmPassword,\n                imageAccount: imageAccount\n            }\n            console.log(editedAccount)\n\n\n            // pass a second parameter to the patch for sending info to your server inside req.body\n            let userId = this.props.match.params.userId\n            let response = await axios.patch(`${API_URL}/api/account/${userId}`, editedAccount, {withCredentials: true})\n\n            if (response.data.errorMessage) {\n                await this.setState({...this.state, error: response.data.errorMessage})\n                return\n             }\n\n            this.props.history.push(`/account/${userId}`)\n\n        }\n        catch (err) {\n            console.log('Edit failed', err)\n        }\n        \n    }\n\n    handleClickOpen = async  () => {\n        await this.setState({\n            open: true\n        })\n    };\n    \n    handleClose = async () => {\n        await this.setState({\n            open: false\n        })\n    };\n\n    handleDeleteAccount = async () => {\n        try {\n            let userId = this.props.match.params.userId\n            await axios.delete(`${API_URL}/api/account/${userId}`)\n            this.props.history.push(`/`)\n\n        }\n        catch (err) {\n            console.log('Delete failed', err)\n        }\n    }\n\n    render() {\n\n        const {firstName, lastName, email, password, confirmPassword, imageAccount} = this.state\n        return (\n            <div>\n                <TextField id=\"outlined-basic\" label=\"First name\" variant=\"outlined\" type=\"text\" value={firstName} required onChange={this.handleChange('firstName')}/>\n                <TextField id=\"outlined-basic\" label=\"Last name\" variant=\"outlined\" type=\"text\" value={lastName} required onChange={this.handleChange('lastName')}/>\n                <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" type=\"email\" value={email} required onChange={this.handleChange('email')}/>\n                <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" value={password} required onChange={this.handleChange('password')}/>\n                <TextField id=\"outlined-basic\" label=\"Confirm password\" variant=\"outlined\" type=\"password\" value={confirmPassword} required onChange={this.handleChange('confirmPassword')}/>\n                <Button\n                    variant=\"contained\"\n                    component=\"label\"\n                    >\n                        Add an image\n                    <input\n                        type=\"file\"\n                        name=\"imageAccount\"\n                        accept=\"image/png, image/jpg\"\n                        onChange={this.handleImage}\n                        hidden\n                    />\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleEditAccount}>EDIT</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen} >DELETE</Button>\n\n                {/* dialog */}\n\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"Are you sure you want to delete this event?\"}</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        This action cannot be undone.\n                    </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        No\n                    </Button>\n                    <Button onClick={this.handleDeleteEvent} color=\"primary\" autoFocus>\n                        Yes\n                    </Button>\n                    </DialogActions>\n                </Dialog>\n                {\n                    this.state.error && <Alert severity=\"error\">{this.state.error}</Alert>\n                } \n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditAccount);\n","import axios from 'axios'\nimport React, { Component } from 'react'\nimport {API_URL} from '../../config.js'\nimport io from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\n\nlet socket = ''\n\nclass ChatPage extends Component {\n    // Assing a ref to the messages div\n    messagesEnd = React.createRef()\n    state = {\n        user: this.props.user,\n        loading: true, \n        messageList: [],\n        currentMessage: '',\n        conversationId: ''\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    componentDidMount = async () => {\n\n        //setup your socket connection with the server\n        socket = io(`${API_URL}`);\n\n        let userResponse = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n         this.setState({\n           user: userResponse.data\n         })\n\n        let participants = [this.state.user._id, this.props.match.params.userId ]\n        let conversation = await axios.post(`${API_URL}/api/conversation`, {participants}, {withCredentials: true})    \n\n        let conversationId = conversation.data._id\n        let response = await axios.get(`${API_URL}/api/messages/${conversationId}`)\n\n        console.log(response.data)\n        console.log(this.state.user)\n\n        await this.setState({\n            loading: false, \n            messageList: response.data,\n            conversationId: conversationId\n        }, () => {\n            this.scrollToBottom();\n        })\n\n        // ensure that the user is connected to a specific chat via webSocket    \n        socket.emit(\"join_chat\", conversationId);\n\n        //Handle incoming messages from webSocket\n        socket.on(\"receive_message\", (data) => {\n            console.log('Got data', data)\n            this.setState({\n                messageList: [...this.state.messageList, data]\n            }, () => {\n                this.scrollToBottom();\n            })\n        });    \n    }\n\n    handleMessageInput = async (e) => {\n        await this.setState({\n            currentMessage: e.target.value\n        })\n    }\n\n    sendMessage = async () => {\n        // Create the object structure\n        let messageContent = {\n            chatId: this.state.conversationId,\n            content: {\n              sender: this.state.user._id,\n              message: this.state.currentMessage,\n            },\n          };          \n          // emit it so that everyone connected to the same chat receives the message\n        await socket.emit(\"send_message\", messageContent);\n\n        messageContent.content.sender = this.state.user\n\n        await this.setState({\n            messageList: [...this.state.messageList, messageContent.content],\n            currentMessage: ''\n        }, () => {\n            this.scrollToBottom();\n        })\n    }\n\n\n    render() {\n        const { loading , messageList} = this.state\n        const { user } = this.state\n\n        if (loading) {\n            <p>Loading all messages . . .</p>\n        }\n\n        return (\n            <div>\n                <h3>You're in the Chat Page </h3>\n                <div className=\"chatContainer\">\n                    <div className=\"messages\">\n                        {\n                            messageList.map((val) => {\n                                return (\n                                    <div key={val._id} className=\"messageContainer\" id={val.sender._id == user._id ? \"You\" : \"Other\"}>\n                                        <div className=\"messageIndividual\">\n                                            {val.sender._id == user._id?  \"You\" : val.sender.firstName }: {val.message}\n                                        </div>\n                                    </div>\n                                );\n                            })\n                        }\n                        <div style={{ float:\"left\", clear: \"both\" }}\n                            ref={(el) => { this.messagesEnd = el; }}>\n                        </div>\n                    </div>\n                    <div className=\"messageInputs\">\n                        <input value={this.state.currentMessage} type=\"text\" placeholder=\"Message...\"\n                            onChange={this.handleMessageInput}\n                        />\n                        <button onClick={this.sendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ChatPage)","import React, { Component } from \"react\";\nimport { Switch, Route, withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport {API_URL} from './config.js'\nimport Styles from './App.css'\nimport { ThemeProvider,  } from \"@material-ui/styles\";\nimport {CircularProgress} from '@material-ui/core';\n\n//start importing components\nimport Home from './components/Home';\nimport MyAppBar from './components/MyAppBar';\nimport NotFound from \"./components/NotFound\";\nimport Auth from \"./components/auth/Auth\";\nimport EventsList from \"./components/events/EventsList\";\nimport EventDetail from \"./components/events/EventDetail\";\nimport CreateEvent from \"./components/events/create-event/CreateEvent\";\nimport Account from \"./components/user/Account\";\nimport EditEvent from \"./components/events/EditEvent\"\nimport EditAccount from \"./components/user/EditAccount\"\nimport ChatPage from './components/chat/ChatPage'\n\n//importing styles\nimport {theme} from './DefaultTheme'\n\n//COMPONENT\nclass App extends Component {\n  \n  state = {\n     user: null,\n     error: null,\n     fetchingUser: true, \n  }\n\n  componentDidMount = async () => {\n        try {\n           let userResponse = await axios.get(`${API_URL}/api/user`, {withCredentials: true})\n           await this.setState({\n              user: userResponse.data,\n              fetchingUser: false,\n           })\n         } catch(err) {\n            await this.setState({\n              user: null,\n              fetchingUser: false,\n            })\n         }\n         \n     } \n\n  handleFacebookResponse = (data) => {\n    // this.setState({\n    //     showLoading: true\n    // })\n\n    console.log(\"data\", data)\n    const {name, email, picture: {data: {url}}, userID} = data\n    let newUser = {name, email, imageAccount: url, facebookId: userID}\n\n    axios.post(`${API_URL}/api/facebook/info`, newUser , {withCredentials: true})\n        .then((response) => {\n          console.log(response.data)\n            this.setState({\n                user: response.data.data,\n                error: null,\n                // showLoading: false\n            }, () => {\n              console.log(this.props)\n               console.log(this.state.user.imageAccount)\n                this.props.history.push('/events')\n            });\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n  }\n\n  handleGoogleSuccess= (data) => {\n\n    // this.setState({\n    //   showLoading: true\n    // })\n\n    const {givenName, familyName, email, imageUrl, googleId} = data.profileObj\n    let newUser = {\n      firstName: givenName,\n      lastName: familyName,\n      email,\n      imageAccount: imageUrl,\n      googleId\n    }\n\n    axios.post(`${API_URL}/api/google/info`, newUser , {withCredentials: true})\n      .then((response) => {\n        this.setState({\n          user: response.data.data,\n          error: null,\n          // showLoading: false\n        }, () => {\n          this.props.history.push('/events')\n        });\n      })\n  }\n\n  handleLogOut = async () => {\n    try {\n      await axios.post(`${API_URL}/api/logout`, {}, {withCredentials: true})\n      // clearing the user once they logout\n      this.setState({\n        user: null\n      } , () => {\n\n        this.props.history.push('/')\n      })\n\n    }\n    catch(err) {\n      console.log('Logout failed', err)\n    }\n  }\n\n  //this will change the state of the user when a sign in or sign up is done. Data is the user data.\n  handleUserState = (data) => {\n    this.setState({\n      user: data\n    })\n  }\n\n\n  render() {\n    if (this.state.fetchingUser){\n      return <CircularProgress color=\"secondary\" />\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n            <MyAppBar user={this.state.user} onLogOut={this.handleLogOut}/>\n            <Switch>\n              <Route exact path={'/'}  render={(routeProps) => {\n                return <Home/>\n              }} />\n              <Route path={'/auth'}  render={(routeProps) => {\n                return <Auth {...routeProps}\n                  user={this.state.user} \n                  onFacebookResponse={this.handleFacebookResponse} \n                  onGoogleResponse={this.handleGoogleSuccess}\n                  onAuth={this.handleUserState}\n                />\n              }} />\n              <Route exact path={'/events'}  render={(routeProps) => {\n                return <EventsList {...routeProps}\n                  user={this.state.user} \n                  onAuth={this.handleUserState}\n                />\n              }} />\n              <Route exact path={'/events/:eventId'}  render={(routeProps) => {\n                return <EventDetail {...routeProps}\n                  user={this.state.user} />\n              }} />\n               <Route exact path={'/create'}  render={(routeProps) => {\n                return <CreateEvent {...routeProps}\n                user={this.state.user}\n              />\n              }} />\n              <Route exact path={'/account/:userId'}  render={(routeProps) => {\n                return <Account {...routeProps}\n                user={this.state.user}\n              />\n              }} />\n              <Route exact path={'/events/:eventId/edit'}  render={(routeProps) => {\n                return <EditEvent {...routeProps}\n                user={this.state.user} \n              />\n              }} />\n              <Route exact path={'/account/:userId/edit'}  render={(routeProps) => {\n                return <EditAccount {...routeProps}\n                user={this.state.user}\n              />\n              }} />\n              <Route exact path={'/chat/:userId'}  render={(routeProps) => {\n                return <ChatPage {...routeProps}\n                user={this.state.user}\n              />\n              }} />\n              <Route component={NotFound} />\n            </Switch>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}